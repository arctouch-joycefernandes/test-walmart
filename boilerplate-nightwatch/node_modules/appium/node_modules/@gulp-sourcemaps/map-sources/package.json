{
  "_args": [
    [
      {
        "raw": "@gulp-sourcemaps/map-sources@https://registry.npmjs.org/@gulp-sourcemaps/map-sources/-/map-sources-1.0.0.tgz",
        "scope": "@gulp-sourcemaps",
        "escapedName": "@gulp-sourcemaps%2fmap-sources",
        "name": "@gulp-sourcemaps/map-sources",
        "rawSpec": "https://registry.npmjs.org/@gulp-sourcemaps/map-sources/-/map-sources-1.0.0.tgz",
        "spec": "https://registry.npmjs.org/@gulp-sourcemaps/map-sources/-/map-sources-1.0.0.tgz",
        "type": "remote"
      },
      "/Users/joycefernandes/Documents/Walmart/boilerplate-nightwatch/node_modules/appium"
    ]
  ],
  "_from": "@gulp-sourcemaps/map-sources@https://registry.npmjs.org/@gulp-sourcemaps/map-sources/-/map-sources-1.0.0.tgz",
  "_id": "@gulp-sourcemaps/map-sources@1.0.0",
  "_inCache": true,
  "_location": "/appium/@gulp-sourcemaps/map-sources",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@gulp-sourcemaps/map-sources@https://registry.npmjs.org/@gulp-sourcemaps/map-sources/-/map-sources-1.0.0.tgz",
    "scope": "@gulp-sourcemaps",
    "escapedName": "@gulp-sourcemaps%2fmap-sources",
    "name": "@gulp-sourcemaps/map-sources",
    "rawSpec": "https://registry.npmjs.org/@gulp-sourcemaps/map-sources/-/map-sources-1.0.0.tgz",
    "spec": "https://registry.npmjs.org/@gulp-sourcemaps/map-sources/-/map-sources-1.0.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/appium",
    "/appium/gulp-sourcemaps"
  ],
  "_resolved": "https://registry.npmjs.org/@gulp-sourcemaps/map-sources/-/map-sources-1.0.0.tgz",
  "_shasum": "890ae7c5d8c877f6d384860215ace9d7ec945bda",
  "_shrinkwrap": null,
  "_spec": "@gulp-sourcemaps/map-sources@https://registry.npmjs.org/@gulp-sourcemaps/map-sources/-/map-sources-1.0.0.tgz",
  "_where": "/Users/joycefernandes/Documents/Walmart/boilerplate-nightwatch/node_modules/appium",
  "author": {
    "name": "Gulp-sourcemaps Team"
  },
  "bugs": {
    "url": "https://github.com/gulp-sourcemaps/map-sources/issues"
  },
  "contributors": [
    {
      "name": "Blaine Bublitz",
      "email": "blaine.bublitz@gmail.com"
    }
  ],
  "dependencies": {
    "normalize-path": "^2.0.1",
    "through2": "^2.0.3"
  },
  "description": "Gulp plugin for mapping sources of a sourcemap.",
  "devDependencies": {
    "eslint": "^1.7.3",
    "eslint-config-gulp": "^2.0.0",
    "expect": "^1.19.0",
    "istanbul": "^0.4.3",
    "istanbul-coveralls": "^1.0.3",
    "jscs": "^2.3.5",
    "jscs-preset-gulp": "^1.0.0",
    "mississippi": "^1.3.0",
    "mocha": "^2.4.5",
    "vinyl": "^2.0.1"
  },
  "engines": {
    "node": ">= 0.10"
  },
  "files": [
    "LICENSE",
    "index.js"
  ],
  "homepage": "https://github.com/gulp-sourcemaps/map-sources#readme",
  "keywords": [
    "sourcemap",
    "sources",
    "stream"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "@gulp-sourcemaps/map-sources",
  "optionalDependencies": {},
  "readme": "# @gulp-sourcemaps/map-sources\n\n[![NPM version][npm-image]][npm-url] [![Downloads][downloads-image]][npm-url] [![Build Status][travis-image]][travis-url] [![AppVeyor Build Status][appveyor-image]][appveyor-url] [![Coveralls Status][coveralls-image]][coveralls-url]\n\nGulp plugin for mapping sources of a sourcemap.\n\n## Example\n\n```js\nvar mapSources = require('@gulp-sourcemaps/map-sources');\n\ngulp.src(...)\n  .pipe(sourcemaps.init())\n  .pipe(mapSources(function(sourcePath, file) {\n    return '../' + sourcePath;\n  }))\n  .pipe(sourcemaps.write())\n  .pipe(gulp.dest(...))\n```\n\n## API\n\n### `mapSources(mapFn)`\n\nTakes a map function as the only argument. Returns an `objectMode` Transform stream.\n\n#### `mapFn(sourcePath, file)`\n\nThe map function is called once per value of the `sources` array of a `sourceMap` attached to each [`Vinyl`][vinyl-url] object passed through the stream.  The map function is called with the `sourcePath` string from the `sources` array and the `file` object it originated from.  The return value replaces the original value in the array.\n\nIf a `Vinyl` object doesn't have a `sourceMap` or `sourceMap.sources` property, the file is passed through the stream without having the `mapFn` called.\n\nAll `sources` are normalized to use `/` instead of `\\\\` as path separators.\n\n## License\n\nMIT\n\n[vinyl-url]: https://github.com/gulpjs/vinyl\n\n[downloads-image]: http://img.shields.io/npm/dm/@gulp-sourcemaps/map-sources.svg\n[npm-url]: https://npmjs.org/package/@gulp-sourcemaps/map-sources\n[npm-image]: http://img.shields.io/npm/v/@gulp-sourcemaps/map-sources.svg\n\n[travis-url]: https://travis-ci.org/gulp-sourcemaps/map-sources\n[travis-image]: http://img.shields.io/travis/gulp-sourcemaps/map-sources.svg?label=travis-ci\n\n[appveyor-url]: https://ci.appveyor.com/project/phated/map-sources\n[appveyor-image]: https://img.shields.io/appveyor/ci/phated/map-sources.svg?label=appveyor\n\n[coveralls-url]: https://coveralls.io/r/gulp-sourcemaps/map-sources\n[coveralls-image]: http://img.shields.io/coveralls/gulp-sourcemaps/map-sources.svg\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gulp-sourcemaps/map-sources.git"
  },
  "scripts": {
    "cover": "istanbul cover _mocha --report lcovonly",
    "coveralls": "npm run cover && istanbul-coveralls",
    "lint": "eslint . && jscs index.js test/",
    "pretest": "npm run lint",
    "test": "mocha --async-only"
  },
  "version": "1.0.0"
}
