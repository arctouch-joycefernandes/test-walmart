{"version":3,"sources":["../src/logger.js"],"names":["debug","argv","PREFIX","output","console","msg","deb","clc","blueBright","log","util","format","info","greenBright","warn","yellowBright","err","redBright","error","loghelp","stringifyLog","stringifyWarn","stringifyErr"],"mappings":";;;;;;AAEA;;AACA;;;;AACA;;;;;;AAEA,IAAMA,SAAQC,YAAKD,KAAnB;AACA,IAAME,SAAS,oBAAf;;kBAEe;AACbC,UAAQC,OADK;;AAGbJ,OAHa,iBAGPK,GAHO,EAGF;AACT,QAAIL,MAAJ,EAAW;AACT,UAAMM,MAAMC,mBAAIC,UAAJ,CAAe,SAAf,CAAZ;AACA,WAAKL,MAAL,CAAYM,GAAZ,CAAgBC,eAAKC,MAAL,CAAY,YAAZ,EAA0BL,GAA1B,EAA+BJ,MAA/B,EAAuCG,GAAvC,CAAhB;AACD;AACF,GARY;AASbI,KATa,eASTJ,GATS,EASJ;AACP,QAAMO,OAAOL,mBAAIM,WAAJ,CAAgB,QAAhB,CAAb;AACA,SAAKV,MAAL,CAAYM,GAAZ,CAAgBC,eAAKC,MAAL,CAAY,YAAZ,EAA0BC,IAA1B,EAAgCV,MAAhC,EAAwCG,GAAxC,CAAhB;AACD,GAZY;AAabS,MAba,gBAaRT,GAbQ,EAaH;AACR,QAAMS,OAAOP,mBAAIQ,YAAJ,CAAiB,QAAjB,CAAb;AACA,SAAKZ,MAAL,CAAYW,IAAZ,CAAiBJ,eAAKC,MAAL,CAAY,YAAZ,EAA0BG,IAA1B,EAAgCZ,MAAhC,EAAwCG,GAAxC,CAAjB;AACD,GAhBY;AAiBbW,KAjBa,eAiBTX,GAjBS,EAiBJ;AACP,QAAMW,MAAMT,mBAAIU,SAAJ,CAAc,SAAd,CAAZ;AACA,SAAKd,MAAL,CAAYe,KAAZ,CAAkBR,eAAKC,MAAL,CAAY,YAAZ,EAA0BK,GAA1B,EAA+Bd,MAA/B,EAAuCG,GAAvC,CAAlB;AACD,GApBY;AAqBbc,SArBa,mBAqBLd,GArBK,EAqBA;AACX,SAAKF,MAAL,CAAYM,GAAZ,CAAgBJ,GAAhB;AACD,GAvBY;AAwBbe,cAxBa,wBAwBAf,GAxBA,EAwBK;AAChB,QAAMO,OAAOL,mBAAIM,WAAJ,CAAgB,QAAhB,CAAb;AACA,WAAOH,eAAKC,MAAL,CAAY,YAAZ,EAA0BC,IAA1B,EAAgCV,MAAhC,EAAwCG,GAAxC,CAAP;AACD,GA3BY;AA4BbgB,eA5Ba,yBA4BChB,GA5BD,EA4BM;AACjB,QAAMS,OAAOP,mBAAIQ,YAAJ,CAAiB,QAAjB,CAAb;AACA,WAAOL,eAAKC,MAAL,CAAY,YAAZ,EAA0BG,IAA1B,EAAgCZ,MAAhC,EAAwCG,GAAxC,CAAP;AACD,GA/BY;AAgCbiB,cAhCa,wBAgCAjB,GAhCA,EAgCK;AAChB,QAAMW,MAAMT,mBAAIU,SAAJ,CAAc,SAAd,CAAZ;AACA,WAAOP,eAAKC,MAAL,CAAY,YAAZ,EAA0BK,GAA1B,EAA+Bd,MAA/B,EAAuCG,GAAvC,CAAP;AACD;AAnCY,C","file":"logger.js","sourcesContent":["\n\nimport { argv } from \"yargs\";\nimport util from \"util\";\nimport clc from \"cli-color\";\n\nconst debug = argv.debug;\nconst PREFIX = \"Saucelabs Executor\";\n\nexport default {\n  output: console,\n\n  debug(msg) {\n    if (debug) {\n      const deb = clc.blueBright(\"[DEBUG]\");\n      this.output.log(util.format(\"%s [%s] %s\", deb, PREFIX, msg));\n    }\n  },\n  log(msg) {\n    const info = clc.greenBright(\"[INFO]\");\n    this.output.log(util.format(\"%s [%s] %s\", info, PREFIX, msg));\n  },\n  warn(msg) {\n    const warn = clc.yellowBright(\"[WARN]\");\n    this.output.warn(util.format(\"%s [%s] %s\", warn, PREFIX, msg));\n  },\n  err(msg) {\n    const err = clc.redBright(\"[ERROR]\");\n    this.output.error(util.format(\"%s [%s] %s\", err, PREFIX, msg));\n  },\n  loghelp(msg) {\n    this.output.log(msg);\n  },\n  stringifyLog(msg) {\n    const info = clc.greenBright(\"[INFO]\");\n    return util.format(\"%s [%s] %s\", info, PREFIX, msg);\n  },\n  stringifyWarn(msg) {\n    const warn = clc.yellowBright(\"[WARN]\");\n    return util.format(\"%s [%s] %s\", warn, PREFIX, msg);\n  },\n  stringifyErr(msg) {\n    const err = clc.redBright(\"[ERROR]\");\n    return util.format(\"%s [%s] %s\", err, PREFIX, msg);\n  }\n};\n"]}