{"version":3,"sources":["../src/profile.js"],"names":["FIREFOX_MARIONETTE","_mergeCapabilities","capabilities","capsConfig","browser","_","merge","logger","debug","JSON","stringify","_patchFirefox","browserName","parseInt","version","marionette","javascriptEnabled","_patchAppium","tempCap","cloneDeep","settings","config","appCapabilitiesConfig","app","_mergeLocalAppiumCapabilities","appCapabilitiesConfigPath","path","resolve","process","cwd","capabilitiesConfig","require","e","log","getNightwatchConfig","profile","sauceSettings","assign","desiredCapabilities","tunnel","tunnelIdentifier","sharedSauceParentAccount","username","access_key","accessKey","sauceOutboundProxy","proxy","getProfiles","opts","argvMock","runArgv","argv","SauceBrowsers","initialize","then","Promise","sauce_browser","p","get","id","executor","nightwatchEnv","sauce_browsers","tempBrowsers","split","returnBrowsers","forEach","b","trim","push","getCapabilities","prof","resolution","screenResolution","orientation","deviceOrientation","reject","appium","listBrowsers","callback","device_additions","addNormalizedBrowsersFromFile","browserTable","options","head","loghelp","toString","catch","err","stack"],"mappings":"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","file":"profile.js","sourcesContent":["import _ from \"lodash\";\nimport path from \"path\";\nimport SauceBrowsers from \"guacamole\";\nimport listSauceCliBrowsers from \"guacamole/src/cli_list\";\nimport { argv } from \"yargs\";\nimport logger from \"./logger\";\nimport settings from \"./settings\";\n\nconst FIREFOX_MARIONETTE = 48;\n\nconst _mergeCapabilities = (capabilities, capsConfig, browser) => {\n  if (capsConfig && capsConfig[browser]) {\n    capabilities = _.merge(capabilities, capsConfig[browser]);\n    logger.debug(`DesiredCapabilities after merging appCapabilitiesConfig for browser ${browser}`);\n    logger.debug(JSON.stringify(capabilities));\n  }\n  return capabilities;\n};\n\nconst _patchFirefox = (capabilities) => {\n  if (capabilities.browserName === \"firefox\"\n    && parseInt(capabilities.version) >= FIREFOX_MARIONETTE) {\n    capabilities.marionette = true;\n    capabilities.javascriptEnabled = true;\n  }\n\n  return capabilities;\n};\n\nconst _patchAppium = (capabilities, browser) => {\n  let tempCap = _.cloneDeep(capabilities);\n  // for customized app capabilities\n  tempCap = _mergeCapabilities(tempCap, settings.config.appCapabilitiesConfig, browser);\n\n  // if app location is passed via command line arg\n  if (settings.config.app) {\n    tempCap.app = settings.config.app;\n  }\n\n  if (tempCap.app) {\n    delete tempCap.browserName;\n  }\n\n  return tempCap;\n};\n\nconst _mergeLocalAppiumCapabilities = (appCapabilitiesConfig, browser, capabilities) => {\n  // for appCapabilitiesConfig\n  logger.debug(appCapabilitiesConfig);\n  let appCapabilitiesConfigPath;\n\n  try {\n    appCapabilitiesConfigPath = path.resolve(process.cwd(), appCapabilitiesConfig);\n    logger.debug(`Requiring ${appCapabilitiesConfigPath}`);\n    /* eslint-disable global-require */\n    const capabilitiesConfig = require(appCapabilitiesConfigPath);\n    /* eslint-enable global-require */\n\n    capabilities = _mergeCapabilities(capabilities, capabilitiesConfig, browser);\n  } catch (e) {\n    logger.log(`Could not load ${appCapabilitiesConfigPath}.\n                Does the file exist or is it a valid JSON or JS file ?`);\n  }\n\n  return capabilities;\n};\n\nexport default {\n  getNightwatchConfig: (profile, sauceSettings) => {\n    const capabilities = _.assign({}, profile.desiredCapabilities);\n\n    if (sauceSettings.tunnel.tunnelIdentifier) {\n      capabilities[\"tunnel-identifier\"] = sauceSettings.tunnel.tunnelIdentifier;\n      if (sauceSettings.sharedSauceParentAccount) {\n        // if tunnel is shared by parent account\n        capabilities[\"parent-tunnel\"] = sauceSettings.sharedSauceParentAccount;\n      }\n    } else {\n      // This property may exist, so blow it away\n      delete capabilities[\"tunnel-identifier\"];\n    }\n\n    /*eslint-disable camelcase*/\n    const config = {\n      desiredCapabilities: capabilities,\n      username: sauceSettings.tunnel.username,\n      access_key: sauceSettings.tunnel.accessKey\n    };\n\n    // For *outbound Selenium control traffic*, Nightwatch supports a proxy\n    // property directly on the environment configuration object (note: this is\n    // NOT to be confused with proxy settings in desiredCapabilities, which are\n    // used for return path traffic from the remote browser).\n    if (sauceSettings.sauceOutboundProxy) {\n      config.proxy = sauceSettings.sauceOutboundProxy;\n    }\n\n    logger.debug(`executor config: ${JSON.stringify(config)}`);\n    return config;\n  },\n\n  getProfiles: (opts, argvMock = null) => {\n    let runArgv = argv;\n\n    if (argvMock) {\n      runArgv = argvMock;\n    }\n\n    return SauceBrowsers\n      .initialize()\n      .then(() => {\n        return new Promise((resolve) => {\n          if (runArgv.sauce_browser) {\n            const p = {\n              desiredCapabilities: _patchFirefox(SauceBrowsers.get({\n                id: runArgv.sauce_browser\n              })[0]),\n              executor: \"sauce\",\n              nightwatchEnv: \"sauce\",\n              id: runArgv.sauce_browser\n            };\n            p.desiredCapabilities = _patchAppium(p.desiredCapabilities, runArgv.sauce_browser);\n\n            logger.debug(`detected profile: ${JSON.stringify(p)}`);\n\n            resolve(p);\n          } else if (runArgv.sauce_browsers) {\n            const tempBrowsers = runArgv.sauce_browsers.split(\",\");\n            const returnBrowsers = [];\n\n            _.forEach(tempBrowsers, (browser) => {\n              const b = browser.trim();\n              const p = {\n                desiredCapabilities: _patchFirefox(SauceBrowsers.get({\n                  id: b\n                })[0]),\n                executor: \"sauce\",\n                nightwatchEnv: \"sauce\",\n                // id is for magellan reporter\n                id: b\n              };\n\n              p.desiredCapabilities = _patchAppium(p.desiredCapabilities, b);\n\n              returnBrowsers.push(p);\n            });\n\n            logger.debug(`detected profiles: ${JSON.stringify(returnBrowsers)}`);\n\n            resolve(returnBrowsers);\n          } else {\n            resolve();\n          }\n        });\n      });\n  },\n\n  /*eslint-disable no-unused-vars*/\n  getCapabilities: (profile, opts) => {\n    // profile key mapping\n    // browser => id\n    // resolution => screenResolution\n    // orientation => deviceOrientation\n    const prof = {\n      id: profile.browser\n    };\n\n    if (profile.resolution) {\n      prof.screenResolution = profile.resolution;\n    }\n\n    if (profile.orientation) {\n      prof.deviceOrientation = profile.orientation;\n    }\n\n    return SauceBrowsers\n      .initialize()\n      .then(() => {\n        return new Promise((resolve, reject) => {\n          try {\n            const desiredCapabilities = _patchFirefox(SauceBrowsers.get(prof)[0]);\n            // add executor info back to capabilities\n            const p = {\n              desiredCapabilities,\n              executor: profile.executor,\n              nightwatchEnv: profile.executor,\n              id: prof.id\n            };\n            // for appium test\n            if (profile.appium) {\n              p.desiredCapabilities = _.merge(p.desiredCapabilities, profile.appium);\n            }\n            if (profile.appCapabilitiesConfig) {\n              p.desiredCapabilities = _mergeLocalAppiumCapabilities(profile.appCapabilitiesConfig,\n                profile.browser,\n                p.desiredCapabilities);\n            }\n            p.desiredCapabilities = _patchAppium(p.desiredCapabilities, profile.browser);\n            resolve(p);\n          } catch (e) {\n            reject(`Executor sauce cannot resolve profile ${\n              JSON.stringify(profile)}`);\n          }\n        });\n      });\n  },\n\n  listBrowsers: (opts, callback, argvMock = null) => {\n    let runArgv = argv;\n\n    if (argvMock) {\n      runArgv = argvMock;\n    }\n\n    SauceBrowsers\n      .initialize(true)\n      .then(() => {\n        return new Promise((resolve) => {\n          if (runArgv.device_additions) {\n            logger.log(\"Loading customized profiles\");\n            SauceBrowsers.addNormalizedBrowsersFromFile(runArgv.device_additions);\n          }\n          resolve();\n        });\n      })\n      .then(() => {\n        return new Promise((resolve) => {\n          listSauceCliBrowsers((browserTable) => {\n            // convert table heading\n            browserTable.options.head[1] = \"Copy-Paste Command-Line Option\";\n            logger.loghelp(browserTable.toString());\n            logger.loghelp(\"\");\n            resolve(browserTable);\n          });\n        });\n      })\n      .then((browserTable) => {\n        callback(null, browserTable);\n      })\n      .catch((err) => {\n        logger.err(`Couldn't fetch sauce browsers. Error: ${err}`);\n        logger.err(err.stack);\n        callback(err);\n      });\n  }\n};\n"]}