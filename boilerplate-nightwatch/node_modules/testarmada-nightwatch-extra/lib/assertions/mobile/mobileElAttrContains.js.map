{"version":3,"sources":["../../../src/assertions/mobile/mobileElAttrContains.js"],"names":["MobileElAttrContains","nightwatch","BaseAssertion","call","cmd","util","inherits","prototype","do","value","self","client","api","elementIdAttribute","ELEMENT","attr","result","fail","code","settings","FAILURE_REASONS","BUILTIN_ATTRIBUTE_NOT_FOUND","actual","expected","message","status","assert","protocolFailureDetails","pactual","replace","undefined","indexOf","RegExp","exec","BUILTIN_ACTUAL_NOT_MEET_EXPECTED","pass","command","using","selector","format","startTime","Date","getTime","seenCount","checkConditions","module","exports"],"mappings":"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","file":"mobileElAttrContains.js","sourcesContent":["import util from \"util\";\n\nimport BaseAssertion from \"../../base-mobile-assertion\";\nimport settings from \"../../settings\";\n\nconst MobileElAttrContains = function (nightwatch = null) {\n  BaseAssertion.call(this, nightwatch);\n  this.cmd = \"mobileelattrcontains\";\n};\n\nutil.inherits(MobileElAttrContains, BaseAssertion);\n\nMobileElAttrContains.prototype.do = function (value) {\n  const self = this;\n\n  this.client.api\n    .elementIdAttribute(value.ELEMENT, this.attr, (result) => {\n      if (result.value === null) {\n        // attribute not found for this element\n        self.fail({\n          code: settings.FAILURE_REASONS.BUILTIN_ATTRIBUTE_NOT_FOUND,\n          actual: result.value,\n          expected: self.expected,\n          message: self.message\n        });\n      } else if (result.status === 0) {\n\n        self.assert({\n          actual: result.value,\n          expected: self.expected\n        });\n      } else {\n\n        self.fail({\n          code: settings.FAILURE_REASONS.BUILTIN_ATTRIBUTE_NOT_FOUND,\n          actual: result.value,\n          expected: self.expected,\n          message: self.protocolFailureDetails\n        });\n      }\n    });\n};\n\nMobileElAttrContains.prototype.assert = function ({ actual, expected }) {\n  const pactual = actual.replace(/[\\s|\\n]+/g, \" \");\n\n  if (expected === undefined || pactual.indexOf(expected) < 0\n    && !new RegExp(expected).exec(pactual)) {\n    this.fail({\n      code: settings.FAILURE_REASONS.BUILTIN_ACTUAL_NOT_MEET_EXPECTED,\n      pactual,\n      expected,\n      message: this.message\n    });\n  } else {\n    this.pass({\n      pactual,\n      expected,\n      message: this.message\n    });\n  }\n};\n\n/*eslint max-params:[\"error\", 4] */\nMobileElAttrContains.prototype.command = function (using, selector, attr, expected) {\n  this.selector = selector;\n  this.using = using;\n  this.attr = attr;\n  this.expected = expected;\n\n  this.message = util.format(\"Testing if selector <%s:%s> attribute <%s> \"\n    + \"contains text <%s> after %d milliseconds \",\n    this.using, this.selector, this.attr, this.expected);\n\n  this.protocolFailureDetails = util.format(\"Selector <%s:%s> doesn't have such attribute %s\",\n    this.using, this.selector, this.attr);\n\n  this.startTime = (new Date()).getTime();\n\n  // Track how many times we've seen selector as :visible\n  this.seenCount = 0;\n  this.checkConditions();\n\n  return this;\n};\n\nmodule.exports = MobileElAttrContains;\n"]}