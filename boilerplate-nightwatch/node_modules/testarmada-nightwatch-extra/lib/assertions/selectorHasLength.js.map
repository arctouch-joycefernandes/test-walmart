{"version":3,"sources":["../../src/assertions/selectorHasLength.js"],"names":["SelectorHasLength","nightwatch","customizedSettings","BaseAssertion","call","cmd","util","inherits","prototype","assert","actual","expected","undefined","fail","code","settings","FAILURE_REASONS","BUILTIN_ACTUAL_NOT_MEET_EXPECTED","pactual","message","pass","injectedJsCommand","$el","sizzle","command","selector","selectorUtil","normalize","format","startTime","Date","getTime","seenCount","decide","checkConditions","module","exports"],"mappings":";;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,oBAAoB,SAApBA,iBAAoB,GAAwD;AAAA,MAA9CC,UAA8C,uEAAjC,IAAiC;AAAA,MAA3BC,kBAA2B,uEAAN,IAAM;;AAChFC,0BAAcC,IAAd,CAAmB,IAAnB,EAAyBH,UAAzB,EAAqCC,kBAArC;AACA,OAAKG,GAAL,GAAW,mBAAX;AACD,CAHD;;AAKAC,eAAKC,QAAL,CAAcP,iBAAd,EAAiCG,uBAAjC;;AAEAH,kBAAkBQ,SAAlB,CAA4BC,MAA5B,GAAqC,UAAUC,MAAV,EAAkBC,QAAlB,EAA4B;AAC/D,MAAIA,aAAaC,SAAb,IAA0BF,WAAWC,QAAzC,EAAmD;AACjD,SAAKE,IAAL,CAAU;AACRC,YAAMC,mBAASC,eAAT,CAAyBC,gCADvB;AAERC,eAASR,MAFD;AAGRC,wBAHQ;AAIRQ,eAAS,KAAKA;AAJN,KAAV;AAMD,GAPD,MAOO;AACL,SAAKC,IAAL,CAAU;AACRF,eAASR,MADD;AAERC,wBAFQ;AAGRQ,eAAS,KAAKA;AAHN,KAAV;AAKD;AACF,CAfD;;AAiBA;AACAnB,kBAAkBQ,SAAlB,CAA4Ba,iBAA5B,GAAgD,UAAUC,GAAV,EAAeC,MAAf,EAAuB;AACrE,SAAO,mBAAP;AACD,CAFD;;AAIAvB,kBAAkBQ,SAAlB,CAA4BgB,OAA5B,GAAsC,UAAUC,QAAV,EAAoBd,QAApB,EAA8B;AAClE,OAAKc,QAAL,GAAgBC,mBAAaC,SAAb,CAAuBF,QAAvB,CAAhB;AACA,OAAKd,QAAL,GAAgBA,QAAhB;;AAEA,OAAKQ,OAAL,GAAeb,eAAKsB,MAAL,CAAY,gEAAZ,EACb,KAAKH,QADQ,EACE,KAAKd,QADP,CAAf;;AAGA,OAAKkB,SAAL,GAAkB,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAAjB;;AAEA;AACA,OAAKC,SAAL,GAAiB,CAAjB;AACA,OAAKC,MAAL;AACA,OAAKC,eAAL;;AAEA,SAAO,IAAP;AACD,CAfD;;AAiBAC,OAAOC,OAAP,GAAiBpC,iBAAjB","file":"selectorHasLength.js","sourcesContent":["import util from \"util\";\n\nimport selectorUtil from \"../util/selector\";\nimport BaseAssertion from \"../base-assertion\";\nimport settings from \"../settings\";\n\nconst SelectorHasLength = function (nightwatch = null, customizedSettings = null) {\n  BaseAssertion.call(this, nightwatch, customizedSettings);\n  this.cmd = \"selectorhaslength\";\n};\n\nutil.inherits(SelectorHasLength, BaseAssertion);\n\nSelectorHasLength.prototype.assert = function (actual, expected) {\n  if (expected === undefined || actual !== expected) {\n    this.fail({\n      code: settings.FAILURE_REASONS.BUILTIN_ACTUAL_NOT_MEET_EXPECTED,\n      pactual: actual,\n      expected,\n      message: this.message\n    });\n  } else {\n    this.pass({\n      pactual: actual,\n      expected,\n      message: this.message\n    });\n  }\n};\n\n/* eslint-disable */\nSelectorHasLength.prototype.injectedJsCommand = function ($el, sizzle) {\n  return \"return $el.length\";\n}\n\nSelectorHasLength.prototype.command = function (selector, expected) {\n  this.selector = selectorUtil.normalize(selector);\n  this.expected = expected;\n\n  this.message = util.format(\"Testing if selector <%s> has length <%s> after %d milliseconds\",\n    this.selector, this.expected);\n\n  this.startTime = (new Date()).getTime();\n\n  // Track how many times we've seen selector as :visible\n  this.seenCount = 0;\n  this.decide();\n  this.checkConditions();\n\n  return this;\n};\n\nmodule.exports = SelectorHasLength;"]}