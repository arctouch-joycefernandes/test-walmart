{"version":3,"sources":["../src/base-assertion.js"],"names":["MAX_TIMEOUT","settings","COMMAND_MAX_TIMEOUT","WAIT_INTERVAL","SEEN_MAX","JS_SEEN_MAX","Base","nightwatch","customizedSettings","EventEmitter","call","isSync","startTime","time","totalTime","seleniumCallTime","executeAsyncTime","selectorPrefix","selector","successMessage","failureMessage","checkConditions","bind","syncModeBrowserList","client","util","inherits","prototype","decide","self","nightwatchExecute","api","executeAsync","executeSizzlejs","jsInjection","executeSizzlejsAsync","exam","b","v","desiredCapabilities","browser","parseInt","browser_version","toLowerCase","browserName","version","_","forEach","cap","split","length","execute","executeSizzlejsSync","injectedJsCommand","result","isVisible","seenCount","elapsed","Date","getTime","seens","selectorLength","logger","warn","selectorVisibleLength","elapse","assert","value","expected","fail","code","FAILURE_REASONS","BUILTIN_SELECTOR_NOT_VISIBLE","BUILTIN_SELECTOR_NOT_FOUND","setTimeout","fn","args","callback","innerArgs","cloneDeep","selectorUtil","depageobjectize","shift","locateStrategy","unshift","push","getSizzlejsSource","JS_WAIT_INTERNAL","verbose","log","JSON","stringify","status","errorStatus","jsDuration","jsStepDuration","isResultReset","isVisibleStrict","sel","clc","yellowBright","resultDisplay","e","inspect","BUILTIN_SELENIUM_ERROR","pass","pactual","message","fmtmessage","assertion","format","capabilities","options","type","cmd","emit","pcode","$el","actual","command","cb","module","exports"],"mappings":"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","file":"base-assertion.js","sourcesContent":["\n\nimport EventEmitter from \"events\";\nimport util from \"util\";\nimport _ from \"lodash\";\nimport clc from \"cli-color\";\nimport safeJsonStringify from \"json-stringify-safe\";\n\nimport settings from \"./settings\";\nimport selectorUtil from \"./util/selector\";\nimport jsInjection from \"./injections/js-injection\";\nimport stats from \"./util/stats\";\nimport logger from \"./util/logger\";\n\n// Wait until we've seen a selector as :visible SEEN_MAX times, with a\n// wait for WAIT_INTERVAL milliseconds between each visibility test.\nconst MAX_TIMEOUT = settings.COMMAND_MAX_TIMEOUT;\nconst WAIT_INTERVAL = settings.WAIT_INTERVAL;\nconst SEEN_MAX = settings.SEEN_MAX;\nconst JS_SEEN_MAX = settings.JS_SEEN_MAX;\n\nconst Base = function (nightwatch = null, customizedSettings = null) {\n  EventEmitter.call(this);\n\n  this.isSync = false;\n  this.startTime = 0;\n  this.time = {\n    totalTime: 0,\n    seleniumCallTime: 0,\n    executeAsyncTime: 0\n  };\n\n  this.selectorPrefix = \"data-magellan-temp-automation-id\";\n  this.selector = null;\n\n  this.successMessage = \"\";\n  this.failureMessage = \"\";\n\n  this.checkConditions = this.checkConditions.bind(this);\n  this.syncModeBrowserList = settings.syncModeBrowserList;\n\n  // for mock and unit test\n  if (nightwatch) {\n    this.client = nightwatch;\n  }\n  if (customizedSettings) {\n    this.syncModeBrowserList = customizedSettings.syncModeBrowserList;\n  }\n};\n\nutil.inherits(Base, EventEmitter);\n\nBase.prototype.decide = function () {\n  const self = this;\n\n  this.nightwatchExecute = this.client.api.executeAsync;\n  this.executeSizzlejs = jsInjection.executeSizzlejsAsync;\n\n  const exam = (b, v, desiredCapabilities) => {\n    if (v) {\n      if (desiredCapabilities.browser\n        && parseInt(desiredCapabilities.browser_version) === parseInt(v)\n        && desiredCapabilities.browser.toLowerCase() === b) {\n        return true;\n      } else if (desiredCapabilities.browserName\n        && parseInt(desiredCapabilities.version) === parseInt(v)\n        && desiredCapabilities.browserName.toLowerCase() === b) {\n        return true;\n      }\n    } else {\n      /* eslint-disable  no-lonely-if */\n      if (desiredCapabilities.browser\n        && desiredCapabilities.browser.toLowerCase() === b) {\n        return true;\n      } else if (desiredCapabilities.browserName\n        && desiredCapabilities.browserName.toLowerCase() === b) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  _.forEach(this.syncModeBrowserList, (browser) => {\n    let b = null;\n    let v = null;\n    const cap = browser.split(\":\");\n    b = cap[0];\n    if (cap.length > 1) {\n      v = cap[1];\n    }\n\n    if (exam(b, v, self.client.desiredCapabilities)) {\n      self.isSync = true;\n      self.nightwatchExecute = self.client.api.execute;\n      self.executeSizzlejs = jsInjection.executeSizzlejsSync;\n    }\n\n  });\n};\n\nBase.prototype.checkConditions = function () {\n  const self = this;\n\n  this.execute(\n    this.executeSizzlejs,\n    [this.selector, this.injectedJsCommand()],\n    (result) => {\n\n      // Keep a running count of how many times we've seen this element visible\n      if (result.isVisible) {\n        self.seenCount += 1;\n      }\n\n      const elapsed = (new Date()).getTime() - self.startTime;\n\n      // If we've seen the selector enough times or waited too long, then\n      // it's time to pass or fail and continue the command chain.\n      if (result.seens >= JS_SEEN_MAX ||\n        self.seenCount >= SEEN_MAX ||\n        elapsed > MAX_TIMEOUT) {\n\n        // Unlike clickEl, only issue a warning in the getEl() version of this\n        if (result.selectorLength > 1) {\n          logger.warn(`getEl saw selector ${self.selector} but result length was ` +\n            ` ${result.selectorLength}, with ${result.selectorVisibleLength}` +\n            ` of those :visible`);\n          logger.warn(`Selector did not disambiguate after ${elapsed} milliseconds, ` +\n            \"refine your selector or check DOM for problems.\");\n        }\n\n        if (self.seenCount >= SEEN_MAX || result.seens >= JS_SEEN_MAX) {\n\n          const elapse = (new Date()).getTime();\n          self.time.executeAsyncTime = elapse - self.startTime;\n          self.time.seleniumCallTime = 0;\n\n          self.assert(result.value.value, self.expected);\n        } else if (result.selectorLength > 0) {\n          // element found but not passing the js visibility check\n          self.fail({ code: settings.FAILURE_REASONS.BUILTIN_SELECTOR_NOT_VISIBLE });\n\n        } else {\n          self.fail({ code: settings.FAILURE_REASONS.BUILTIN_SELECTOR_NOT_FOUND });\n        }\n      } else {\n        setTimeout(self.checkConditions, WAIT_INTERVAL);\n      }\n    });\n};\n\nBase.prototype.execute = function (fn, args, callback) {\n  const self = this;\n\n  const innerArgs = _.cloneDeep(args);\n  const selector = selectorUtil.depageobjectize(innerArgs.shift(), this.client.locateStrategy);\n\n  innerArgs.unshift(selector);\n  innerArgs.push(jsInjection.getSizzlejsSource());\n  innerArgs.push(settings.JS_WAIT_INTERNAL);\n  innerArgs.push(settings.JS_SEEN_MAX);\n\n  this.nightwatchExecute(fn, innerArgs, (result) => {\n    if (settings.verbose) {\n      logger.log(`execute(${innerArgs}) intermediate result: ${JSON.stringify(result)}`);\n    }\n    /*eslint no-magic-numbers:0 */\n    if (result && result.status === 0 && result.value !== null) {\n      // Note: by checking the result and passing result.value to the callback,\n      // we are claiming that the result sent to the callback will always be truthy\n      // and useful, relieving the callback from needing to check the structural\n      // validity of result or result.value\n\n      callback.call(self, result.value);\n    } else if (result && result.status === -1\n      && result.errorStatus === 13 && result.value !== null) {\n      // errorStatus = 13: javascript error: document unloaded while waiting for result\n      // we want to reload the page\n      callback.call(self, {\n        seens: 0,\n        jsDuration: 0,\n        jsStepDuration: [],\n        isResultReset: true,\n        isVisibleStrict: null,\n        isVisible: false,\n        selectorVisibleLength: 0,\n        selectorLength: 0,\n        value: {\n          sel: null,\n          value: null\n        }\n      });\n    } else {\n      logger.warn(clc.yellowBright(\"\\u2622  Received error result from Selenium. \"\n        + \"Raw Selenium result object:\"));\n      let resultDisplay;\n      try {\n        resultDisplay = safeJsonStringify(result);\n      } catch (e) {\n        resultDisplay = util.inspect(result, false, null);\n      }\n      logger.warn(clc.yellowBright(resultDisplay));\n      self.fail({ code: settings.FAILURE_REASONS.BUILTIN_SELENIUM_ERROR });\n    }\n  });\n};\n\nBase.prototype.pass = function ({ pactual, expected, message }) {\n  this.time.totalTime = (new Date()).getTime() - this.startTime;\n  const fmtmessage = (this.isSync ? \"[sync mode] \" : \"\") + this.message;\n\n  this.client.assertion(true, pactual, expected,\n    util.format(fmtmessage, this.time.totalTime), true);\n\n  stats({\n    capabilities: this.client.options.desiredCapabilities,\n    type: \"command\",\n    cmd: this.cmd,\n    value: this.time\n  });\n\n  this.emit(\"complete\");\n};\n\n/*eslint max-params:[\"error\", 4] */\nBase.prototype.fail = function ({ code, pactual, expected, message }) {\n  // if no code here we do nothing\n  const pcode = code ? code : \"\";\n\n  this.time.totalTime = (new Date()).getTime() - this.startTime;\n  const fmtmessage = `${this.isSync ? \"[sync mode] \" : \"\"}${this.message} [[${pcode}]]`;\n\n  this.client.assertion(false, pactual, expected,\n    util.format(fmtmessage, this.time.totalTime), true);\n  this.emit(\"complete\");\n};\n\n/**\n * All children have to implement injectedJsCommand\n *\n */\n/* istanbul ignore next */\n/*eslint no-unused-vars:0 */\nBase.prototype.injectedJsCommand = function ($el) {\n  return \"\";\n};\n\n\n/**\n * All children have to implement do\n *\n */\n/* istanbul ignore next */\n/*eslint no-unused-vars:0 */\nBase.prototype.assert = function (actual, expected) {\n\n};\n\n/**\n * All children have to implement command\n *\n */\n/* istanbul ignore next */\n/*eslint no-unused-vars:0 */\nBase.prototype.command = function (selector, expected, cb) {\n  return this;\n};\n\nmodule.exports = Base;\n"]}