{"version":3,"sources":["../../src/commands/waitForElNotPresent.js"],"names":["MAX_TIMEOUT","settings","COMMAND_MAX_TIMEOUT","WAIT_INTERVAL","WautForElNotPresent","nightwatch","customizedSettings","BaseCommand","call","cmd","util","inherits","prototype","do","value","pass","actual","checkConditions","self","execute","executeSizzlejs","selector","injectedJsCommand","result","elapsed","Date","getTime","startTime","isVisibleStrict","elapse","time","executeAsyncTime","seleniumCallTime","fail","expected","setTimeout","$el","command","cb","selectorUtil","normalize","successMessage","failureMessage","seenCount","decide","module","exports"],"mappings":";;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,cAAcC,mBAASC,mBAA7B;AACA,IAAMC,gBAAgBF,mBAASE,aAA/B;;AAEA,IAAMC,sBAAsB,SAAtBA,mBAAsB,GAAwD;AAAA,MAA9CC,UAA8C,uEAAjC,IAAiC;AAAA,MAA3BC,kBAA2B,uEAAN,IAAM;;AAClFC,wBAAYC,IAAZ,CAAiB,IAAjB,EAAuBH,UAAvB,EAAmCC,kBAAnC;AACA,OAAKG,GAAL,GAAW,0BAAX;AACD,CAHD;;AAKAC,eAAKC,QAAL,CAAcP,mBAAd,EAAmCG,qBAAnC;;AAEAH,oBAAoBQ,SAApB,CAA8BC,EAA9B,GAAmC,UAAUC,KAAV,EAAiB;AAClD,OAAKC,IAAL,CAAU,EAAEC,QAAQF,KAAV,EAAV;AACD,CAFD;;AAIAV,oBAAoBQ,SAApB,CAA8BK,eAA9B,GAAgD,YAAY;AAC1D,MAAMC,OAAO,IAAb;;AAEA,OAAKC,OAAL,CACE,KAAKC,eADP,EAEE,CAAC,KAAKC,QAAN,EAAgB,KAAKC,iBAAL,EAAhB,CAFF,EAGE,UAACC,MAAD,EAAY;AACV,QAAMC,UAAW,IAAIC,IAAJ,EAAD,CAAaC,OAAb,KAAyBR,KAAKS,SAA9C;;AAEA,QAAIJ,OAAOK,eAAP,KAA2B,KAA3B,IAAoCJ,UAAUxB,WAAlD,EAA+D;;AAE7D,UAAIuB,OAAOK,eAAP,KAA2B,KAA/B,EAAsC;AACpC,YAAMC,SAAU,IAAIJ,IAAJ,EAAD,CAAaC,OAAb,EAAf;AACAR,aAAKY,IAAL,CAAUC,gBAAV,GAA6BF,SAASX,KAAKS,SAA3C;AACAT,aAAKY,IAAL,CAAUE,gBAAV,GAA6B,CAA7B;AACAd,aAAKL,EAAL,CAAQ,aAAR;AACD,OALD,MAKO;AACLK,aAAKe,IAAL,CAAU;AACRjB,kBAAQ,aADA;AAERkB,oBAAU;AAFF,SAAV;AAID;AACF,KAbD,MAaO;AACLC,iBAAWjB,KAAKD,eAAhB,EAAiCd,aAAjC;AACD;AACF,GAtBH;AAuBD,CA1BD;;AA4BA;AACAC,oBAAoBQ,SAApB,CAA8BU,iBAA9B,GAAkD,UAAUc,GAAV,EAAe;AAC/D,SAAO,mBAAP;AACD,CAFD;;AAIAhC,oBAAoBQ,SAApB,CAA8ByB,OAA9B,GAAwC,UAAUhB,QAAV,EAAoBiB,EAApB,EAAwB;AAC9D,OAAKjB,QAAL,GAAgBkB,mBAAaC,SAAb,CAAuBnB,QAAvB,CAAhB;AACA,OAAKiB,EAAL,GAAUA,EAAV;;AAEA,OAAKG,cAAL,GAAsB,eAAa,KAAKpB,QAAlB,kCAClB,yBADJ;AAEA,OAAKqB,cAAL,kBAAmC,KAAKrB,QAAxC;;AAEA,OAAKM,SAAL,GAAkB,IAAIF,IAAJ,EAAD,CAAaC,OAAb,EAAjB;;AAEA;AACA,OAAKiB,SAAL,GAAiB,CAAjB;AACA,OAAKC,MAAL;AACA,OAAK3B,eAAL;;AAEA,SAAO,IAAP;AACD,CAhBD;;AAkBA4B,OAAOC,OAAP,GAAiB1C,mBAAjB","file":"waitForElNotPresent.js","sourcesContent":["import util from \"util\";\n\nimport selectorUtil from \"../util/selector\";\nimport BaseCommand from \"../base-command\";\nimport settings from \"../settings\";\n\nconst MAX_TIMEOUT = settings.COMMAND_MAX_TIMEOUT;\nconst WAIT_INTERVAL = settings.WAIT_INTERVAL;\n\nconst WautForElNotPresent = function (nightwatch = null, customizedSettings = null) {\n  BaseCommand.call(this, nightwatch, customizedSettings);\n  this.cmd = \"waitforelementnotpresent\";\n};\n\nutil.inherits(WautForElNotPresent, BaseCommand);\n\nWautForElNotPresent.prototype.do = function (value) {\n  this.pass({ actual: value });\n};\n\nWautForElNotPresent.prototype.checkConditions = function () {\n  const self = this;\n\n  this.execute(\n    this.executeSizzlejs,\n    [this.selector, this.injectedJsCommand()],\n    (result) => {\n      const elapsed = (new Date()).getTime() - self.startTime;\n\n      if (result.isVisibleStrict === false || elapsed > MAX_TIMEOUT) {\n\n        if (result.isVisibleStrict === false) {\n          const elapse = (new Date()).getTime();\n          self.time.executeAsyncTime = elapse - self.startTime;\n          self.time.seleniumCallTime = 0;\n          self.do(\"not present\");\n        } else {\n          self.fail({\n            actual: \"not present\",\n            expected: \"still present\"\n          });\n        }\n      } else {\n        setTimeout(self.checkConditions, WAIT_INTERVAL);\n      }\n    });\n};\n\n/*eslint no-unused-vars:0 */\nWautForElNotPresent.prototype.injectedJsCommand = function ($el) {\n  return \"return $el.length\";\n};\n\nWautForElNotPresent.prototype.command = function (selector, cb) {\n  this.selector = selectorUtil.normalize(selector);\n  this.cb = cb;\n\n  this.successMessage = `Selector '${this.selector}' successfully disappeared`\n    + \" after %d milliseconds.\";\n  this.failureMessage = `Selector '${this.selector}' failed to disappear after %d milliseconds.`;\n\n  this.startTime = (new Date()).getTime();\n\n  // Track how many times we've seen selector as :visible\n  this.seenCount = 0;\n  this.decide();\n  this.checkConditions();\n\n  return this;\n};\n\nmodule.exports = WautForElNotPresent;\n"]}