{"version":3,"sources":["../../../src/commands/mobile/swipeMobileElToEl.js"],"names":["SwipeMobileElToEl","nightwatch","BaseCommand","call","cmd","util","inherits","prototype","do","value","self","client","api","getMobileEl","using2","selector2","result","elementId2","ELEMENT","options","path","sessionId","method","data","protocol","status","pass","actual","fail","code","settings","FAILURE_REASONS","BUILTIN_ELEMENT_NOT_OPERABLE","message","failureMessage","command","using","selector","cb","successMessage","startTime","Date","getTime","seenCount","checkConditions","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,oBAAoB,SAApBA,iBAAoB,GAA6B;AAAA,MAAnBC,UAAmB,uEAAN,IAAM;;AACrDC,8BAAYC,IAAZ,CAAiB,IAAjB,EAAuBF,UAAvB;AACA,OAAKG,GAAL,GAAW,mBAAX;AACD,CAHD;;AAKAC,eAAKC,QAAL,CAAcN,iBAAd,EAAiCE,2BAAjC;;AAGAF,kBAAkBO,SAAlB,CAA4BC,EAA5B,GAAiC,UAAUC,KAAV,EAAiB;AAChD,MAAMC,OAAO,IAAb;AACA,MAAMC,SAASD,KAAKC,MAAL,CAAYC,GAA3B;;AAEA;AACAD,SAAOE,WAAP,CAAmBH,KAAKI,MAAxB,EAAgCJ,KAAKK,SAArC,EAAgD,UAAUC,MAAV,EAAkB;AAChE,QAAMC,aAAaD,OAAOE,OAA1B;;AAEA,QAAMC,UAAU;AACdC,0BAAkBV,KAAKC,MAAL,CAAYU,SAA9B,mBADc;AAEdC,cAAQ,MAFM;AAGdC,YAAM;AACJ,mBAAW,CACT,EAAC,UAAU,OAAX,EAAoB,WAAW,EAAC,WAAWd,MAAMS,OAAlB,EAA/B,EADS,EAET,EAAC,UAAU,MAAX,EAAmB,WAAW,EAAC,MAAM,GAAP,EAA9B,EAFS,EAGT,EAAC,UAAU,QAAX,EAAqB,WAAW,EAAC,WAAWD,UAAZ,EAAhC,EAHS,EAIT,EAAC,UAAU,SAAX,EAAsB,WAAW,EAAjC,EAJS;AADP;AAHQ,KAAhB;;AAYAP,SAAKc,QAAL,CAAcL,OAAd,EAAuB,UAACH,MAAD,EAAY;AACjC,UAAIA,OAAOS,MAAP,KAAkB,CAAtB,EAAyB;AACvBf,aAAKgB,IAAL,CAAU;AACRC,kBAAQX,OAAOP;AADP,SAAV;AAGD,OAJD,MAIO;AACLC,aAAKkB,IAAL,CAAU;AACRC,gBAAMC,mBAASC,eAAT,CAAyBC,4BADvB;AAERC,mBAASvB,KAAKwB;AAFN,SAAV;AAID;AACF,KAXD;AAYD,GA3BD;AA4BD,CAjCD;;AAoCA;AACAlC,kBAAkBO,SAAlB,CAA4B4B,OAA5B,GAAsC,UAAUC,KAAV,EAAiBC,QAAjB,EAA2BvB,MAA3B,EAAmCC,SAAnC,EAA8CuB,EAA9C,EAAkD;AACtF,OAAKD,QAAL,GAAgBA,QAAhB;AACA,OAAKD,KAAL,GAAaA,KAAb;AACA,OAAKrB,SAAL,GAAiBA,SAAjB;AACA,OAAKD,MAAL,GAAcA,MAAd;AACA,OAAKwB,EAAL,GAAUA,EAAV;;AAEA,OAAKC,cAAL,GAAsB,eAAa,KAAKH,KAAlB,SAA2B,KAAKC,QAAhC,wCACS,KAAKvB,MADd,SACwB,KAAKC,SAD7B,8BAAtB;AAEA,OAAKmB,cAAL,GAAsB,eAAa,KAAKE,KAAlB,SAA2B,KAAKC,QAAhC,4CACa,KAAKvB,MADlB,SAC4B,KAAKC,SADjC,8BAAtB;;AAGA,OAAKyB,SAAL,GAAkB,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAAjB;;AAEA;AACA,OAAKC,SAAL,GAAiB,CAAjB;AACA,OAAKC,eAAL;;AAEA,SAAO,IAAP;AACD,CAnBD;;AAqBAC,OAAOC,OAAP,GAAiB9C,iBAAjB","file":"swipeMobileElToEl.js","sourcesContent":["import util from \"util\";\nimport BaseCommand from \"../../base-mobile-command\";\nimport settings from \"../../settings\";\n\nconst SwipeMobileElToEl = function (nightwatch = null) {\n  BaseCommand.call(this, nightwatch);\n  this.cmd = \"swipemobileeltoel\";\n};\n\nutil.inherits(SwipeMobileElToEl, BaseCommand);\n\n\nSwipeMobileElToEl.prototype.do = function (value) {\n  const self = this;\n  const client = self.client.api;\n\n  // Get location of element 2, then drag element1 to element2\n  client.getMobileEl(self.using2, self.selector2, function (result) {\n    const elementId2 = result.ELEMENT;\n\n    const options = {\n      path: `/session/${self.client.sessionId}/touch/perform`,\n      method: \"POST\",\n      data: {\n        \"actions\": [\n          {\"action\": \"press\", \"options\": {\"element\": value.ELEMENT}},\n          {\"action\": \"wait\", \"options\": {\"ms\": 800}},\n          {\"action\": \"moveTo\", \"options\": {'element': elementId2}},\n          {\"action\": \"release\", \"options\": {}}]\n      }\n    };\n\n    self.protocol(options, (result) => {\n      if (result.status === 0) {\n        self.pass({\n          actual: result.value\n        });\n      } else {\n        self.fail({\n          code: settings.FAILURE_REASONS.BUILTIN_ELEMENT_NOT_OPERABLE,\n          message: self.failureMessage\n        });\n      }\n    });\n  });\n}\n;\n\n/*eslint max-params:[\"error\", 5] */\nSwipeMobileElToEl.prototype.command = function (using, selector, using2, selector2, cb) {\n  this.selector = selector;\n  this.using = using;\n  this.selector2 = selector2;\n  this.using2 = using2;\n  this.cb = cb;\n\n  this.successMessage = `Selector '${this.using}:${this.selector}' `\n    + `was swiped to selector '${this.using2}:${this.selector2}' after %d milliseconds.`;\n  this.failureMessage = `Selector '${this.using}:${this.selector}' `\n    + `was not swiped to selector '${this.using2}:${this.selector2}' after %d milliseconds.`;\n\n  this.startTime = (new Date()).getTime();\n\n  // Track how many times selector is successfully checked by /element protocol\n  this.seenCount = 0;\n  this.checkConditions();\n\n  return this;\n};\n\nmodule.exports = SwipeMobileElToEl;\n"]}