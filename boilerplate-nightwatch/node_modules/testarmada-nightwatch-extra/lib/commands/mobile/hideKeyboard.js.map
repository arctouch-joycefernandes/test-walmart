{"version":3,"sources":["../../../src/commands/mobile/hideKeyboard.js"],"names":["MAX_TIMEOUT","settings","COMMAND_MAX_TIMEOUT","WAIT_INTERVAL","HideKeyboard","nightwatch","BaseCommand","call","cmd","util","inherits","prototype","do","value","pass","actual","checkConditions","self","options","path","client","sessionId","method","data","protocol","result","status","seenCount","errorStatus","fail","code","FAILURE_REASONS","BUILTIN_COMMAND_NOT_SUPPORTED","message","failureMessage","elapsed","Date","getTime","startTime","elapse","time","executeAsyncTime","seleniumCallTime","BUILTIN_COMMAND_TIMEOUT","setTimeout","command","using","selector","cb","successMessage","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,cAAcC,mBAASC,mBAA7B;AACA,IAAMC,gBAAgBF,mBAASE,aAA/B;;AAEA,IAAMC,eAAe,SAAfA,YAAe,GAA6B;AAAA,MAAnBC,UAAmB,uEAAN,IAAM;;AAChDC,8BAAYC,IAAZ,CAAiB,IAAjB,EAAuBF,UAAvB;AACA,OAAKG,GAAL,GAAW,cAAX;AACD,CAHD;;AAKAC,eAAKC,QAAL,CAAcN,YAAd,EAA4BE,2BAA5B;;AAEAF,aAAaO,SAAb,CAAuBC,EAAvB,GAA4B,UAAUC,KAAV,EAAiB;AAC3C,OAAKC,IAAL,CAAU,EAAEC,QAAQF,KAAV,EAAV;AACD,CAFD;;AAIA;AACAT,aAAaO,SAAb,CAAuBK,eAAvB,GAAyC,YAAY;AACnD,MAAMC,OAAO,IAAb;;AAEA,MAAMC,UAAU;AACdC,wBAAkB,KAAKC,MAAL,CAAYC,SAA9B,iCADc;AAEdC,YAAQ,MAFM;AAGdC,UAAM;AAHQ,GAAhB;;AAMAN,OAAKO,QAAL,CAAcN,OAAd,EAAuB,UAACO,MAAD,EAAY;AACjC,QAAIA,OAAOC,MAAP,KAAkB,CAAtB,EAAyB;AACvB;AACAT,WAAKU,SAAL,IAAkB,CAAlB;AACD,KAHD,MAGO,IAAIF,OAAOC,MAAP,KAAkB,CAAC,CAAnB,IACTD,OAAOG,WAAP,KAAuB,EADlB,EACsB;AAC3B;AACAX,WAAKY,IAAL,CAAU;AACRC,cAAM7B,mBAAS8B,eAAT,CAAyBC,6BADvB;AAERC,iBAAShB,KAAKiB;AAFN,OAAV;AAID;;AAED,QAAMC,UAAW,IAAIC,IAAJ,EAAD,CAAaC,OAAb,KAAyBpB,KAAKqB,SAA9C;AACA,QAAIrB,KAAKU,SAAL,IAAkB,CAAlB,IAAuBQ,UAAUnC,WAArC,EAAkD;AAChD,UAAIiB,KAAKU,SAAL,IAAkB,CAAtB,EAAyB;AACvB,YAAMY,SAAU,IAAIH,IAAJ,EAAD,CAAaC,OAAb,EAAf;AACApB,aAAKuB,IAAL,CAAUC,gBAAV,GAA6BF,SAAStB,KAAKqB,SAA3C;AACArB,aAAKuB,IAAL,CAAUE,gBAAV,GAA6B,CAA7B;AACAzB,aAAKL,EAAL,CAAQa,OAAOZ,KAAf;AACD,OALD,MAKO;AACLI,aAAKY,IAAL,CAAU;AACRC,gBAAM7B,mBAAS8B,eAAT,CAAyBY,uBADvB;AAERV,mBAAShB,KAAKiB;AAFN,SAAV;AAID;AACF,KAZD,MAYO;AACLU,iBAAW3B,KAAKD,eAAhB,EAAiCb,aAAjC;AACD;AACF,GA7BD;AA8BD,CAvCD;;AAyCAC,aAAaO,SAAb,CAAuBkC,OAAvB,GAAiC,UAAUC,KAAV,EAAiBC,QAAjB,EAA2BC,EAA3B,EAA+B;AAC9D,OAAKD,QAAL,GAAgBA,QAAhB;AACA,OAAKD,KAAL,GAAaA,KAAb;AACA,OAAKE,EAAL,GAAUA,EAAV;;AAEA,OAAKC,cAAL,GAAsB,4CAAtB;AACA,OAAKf,cAAL,GAAsB,+CAAtB;;AAEA,OAAKI,SAAL,GAAkB,IAAIF,IAAJ,EAAD,CAAaC,OAAb,EAAjB;;AAEA;AACA,OAAKV,SAAL,GAAiB,CAAjB;AACA,OAAKX,eAAL;;AAEA,SAAO,IAAP;AACD,CAfD;;AAiBAkC,OAAOC,OAAP,GAAiB/C,YAAjB","file":"hideKeyboard.js","sourcesContent":["import util from \"util\";\nimport BaseCommand from \"../../base-mobile-command\";\nimport settings from \"../../settings\";\n\nconst MAX_TIMEOUT = settings.COMMAND_MAX_TIMEOUT;\nconst WAIT_INTERVAL = settings.WAIT_INTERVAL;\n\nconst HideKeyboard = function (nightwatch = null) {\n  BaseCommand.call(this, nightwatch);\n  this.cmd = \"hidekeyboard\";\n};\n\nutil.inherits(HideKeyboard, BaseCommand);\n\nHideKeyboard.prototype.do = function (value) {\n  this.pass({ actual: value });\n};\n\n/* eslint-disable no-magic-numbers */\nHideKeyboard.prototype.checkConditions = function () {\n  const self = this;\n\n  const options = {\n    path: `/session/${this.client.sessionId}/appium/device/hide_keyboard`,\n    method: \"POST\",\n    data: {}\n  };\n\n  self.protocol(options, (result) => {\n    if (result.status === 0) {\n      // sucessful\n      self.seenCount += 1;\n    } else if (result.status === -1 &&\n      result.errorStatus === 13) {\n      // method not implement, fail immediately\n      self.fail({\n        code: settings.FAILURE_REASONS.BUILTIN_COMMAND_NOT_SUPPORTED,\n        message: self.failureMessage\n      });\n    }\n\n    const elapsed = (new Date()).getTime() - self.startTime;\n    if (self.seenCount >= 1 || elapsed > MAX_TIMEOUT) {\n      if (self.seenCount >= 1) {\n        const elapse = (new Date()).getTime();\n        self.time.executeAsyncTime = elapse - self.startTime;\n        self.time.seleniumCallTime = 0;\n        self.do(result.value);\n      } else {\n        self.fail({\n          code: settings.FAILURE_REASONS.BUILTIN_COMMAND_TIMEOUT,\n          message: self.failureMessage\n        });\n      }\n    } else {\n      setTimeout(self.checkConditions, WAIT_INTERVAL);\n    }\n  });\n};\n\nHideKeyboard.prototype.command = function (using, selector, cb) {\n  this.selector = selector;\n  this.using = using;\n  this.cb = cb;\n\n  this.successMessage = \"Keyboard was hidden after %d milliseconds.\";\n  this.failureMessage = \"Keyboard wasn't hidden after %d milliseconds.\";\n\n  this.startTime = (new Date()).getTime();\n\n  // Track how many times selector is successfully checked by /element protocol\n  this.seenCount = 0;\n  this.checkConditions();\n\n  return this;\n};\n\nmodule.exports = HideKeyboard;\n"]}