{"version":3,"sources":["../../../src/commands/mobile/setMobileElValue.js"],"names":["SetMobileElValue","nightwatch","BaseCommand","call","cmd","util","inherits","prototype","do","value","self","client","api","elementIdValue","ELEMENT","valueToSet","result","status","pass","actual","fail","code","settings","FAILURE_REASONS","BUILTIN_ELEMENT_NOT_OPERABLE","message","failureMessage","command","using","selector","cb","successMessage","startTime","Date","getTime","seenCount","checkConditions","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,mBAAmB,SAAnBA,gBAAmB,GAA6B;AAAA,MAAnBC,UAAmB,uEAAN,IAAM;;AACpDC,8BAAYC,IAAZ,CAAiB,IAAjB,EAAuBF,UAAvB;AACA,OAAKG,GAAL,GAAW,kBAAX;AACD,CAHD;;AAKAC,eAAKC,QAAL,CAAcN,gBAAd,EAAgCE,2BAAhC;;AAEAF,iBAAiBO,SAAjB,CAA2BC,EAA3B,GAAgC,UAAUC,KAAV,EAAiB;AAC/C,MAAMC,OAAO,IAAb;;AAEA,OAAKC,MAAL,CAAYC,GAAZ,CACGC,cADH,CACkBJ,MAAMK,OADxB,EACiC,KAAKC,UADtC,EACkD,UAACC,MAAD,EAAY;AAC1D,QAAIA,OAAOC,MAAP,KAAkB,CAAtB,EAAyB;AACvBP,WAAKQ,IAAL,CAAU,EAACC,QAAQH,OAAOP,KAAhB,EAAV;AACD,KAFD,MAEO;AACLC,WAAKU,IAAL,CAAU;AACRC,cAAMC,mBAASC,eAAT,CAAyBC,4BADvB;AAERC,iBAASf,KAAKgB;AAFN,OAAV;AAID;AACF,GAVH;AAWD,CAdD;;AAgBA;AACA1B,iBAAiBO,SAAjB,CAA2BoB,OAA3B,GAAqC,UAAUC,KAAV,EAAiBC,QAAjB,EAA2Bd,UAA3B,EAAuCe,EAAvC,EAA2C;AAC9E,OAAKD,QAAL,GAAgBA,QAAhB;AACA,OAAKD,KAAL,GAAaA,KAAb;AACA,OAAKb,UAAL,GAAkBA,UAAlB;;AAEA,OAAKe,EAAL,GAAUA,EAAV;;AAEA,OAAKC,cAAL,GAAsB,eAAa,KAAKH,KAAlB,SAA2B,KAAKC,QAAhC,8BACD,KAAKd,UADJ,8BAAtB;AAEA,OAAKW,cAAL,GAAsB,eAAa,KAAKE,KAAlB,SAA2B,KAAKC,QAAhC,oCACK,KAAKd,UADV,8BAAtB;;AAGA,OAAKiB,SAAL,GAAkB,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAAjB;;AAEA,OAAKC,SAAL,GAAiB,CAAjB;AACA,OAAKC,eAAL;;AAEA,SAAO,IAAP;AACD,CAlBD;;AAoBAC,OAAOC,OAAP,GAAiBtC,gBAAjB","file":"setMobileElValue.js","sourcesContent":["import util from \"util\";\nimport BaseCommand from \"../../base-mobile-command\";\nimport settings from \"../../settings\";\n\nconst SetMobileElValue = function (nightwatch = null) {\n  BaseCommand.call(this, nightwatch);\n  this.cmd = \"setmobileelvalue\";\n};\n\nutil.inherits(SetMobileElValue, BaseCommand);\n\nSetMobileElValue.prototype.do = function (value) {\n  const self = this;\n\n  this.client.api\n    .elementIdValue(value.ELEMENT, this.valueToSet, (result) => {\n      if (result.status === 0) {\n        self.pass({actual: result.value});\n      } else {\n        self.fail({\n          code: settings.FAILURE_REASONS.BUILTIN_ELEMENT_NOT_OPERABLE,\n          message: self.failureMessage\n        });\n      }\n    });\n};\n\n/*eslint max-params:[\"error\", 4] */\nSetMobileElValue.prototype.command = function (using, selector, valueToSet, cb) {\n  this.selector = selector;\n  this.using = using;\n  this.valueToSet = valueToSet;\n\n  this.cb = cb;\n\n  this.successMessage = `Selector '${this.using}:${this.selector}' `\n    + `set value to '${this.valueToSet}' after %d milliseconds.`;\n  this.failureMessage = `Selector '${this.using}:${this.selector}' `\n    + `can't set value to '${this.valueToSet}' after %d milliseconds.`;\n\n  this.startTime = (new Date()).getTime();\n\n  this.seenCount = 0;\n  this.checkConditions();\n\n  return this;\n};\n\nmodule.exports = SetMobileElValue;\n"]}