{"version":3,"sources":["../../../src/commands/mobile/startActivity.js"],"names":["MAX_TIMEOUT","settings","COMMAND_MAX_TIMEOUT","WAIT_INTERVAL","StartActivity","nightwatch","BaseCommand","call","cmd","util","inherits","prototype","do","value","pass","actual","checkConditions","self","options","path","client","sessionId","method","data","appPackage","appActivity","protocol","result","status","seenCount","errorStatus","fail","code","FAILURE_REASONS","BUILTIN_COMMAND_NOT_SUPPORTED","message","failureMessage","elapsed","Date","getTime","startTime","elapse","time","executeAsyncTime","seleniumCallTime","BUILTIN_COMMAND_TIMEOUT","setTimeout","command","app","cb","successMessage","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,cAAcC,mBAASC,mBAA7B;AACA,IAAMC,gBAAgBF,mBAASE,aAA/B;;AAEA,IAAMC,gBAAgB,SAAhBA,aAAgB,GAA6B;AAAA,MAAnBC,UAAmB,uEAAN,IAAM;;AACjDC,8BAAYC,IAAZ,CAAiB,IAAjB,EAAuBF,UAAvB;AACA,OAAKG,GAAL,GAAW,eAAX;AACD,CAHD;;AAKAC,eAAKC,QAAL,CAAcN,aAAd,EAA6BE,2BAA7B;;AAEAF,cAAcO,SAAd,CAAwBC,EAAxB,GAA6B,UAAUC,KAAV,EAAiB;AAC5C,OAAKC,IAAL,CAAU,EAAEC,QAAQF,KAAV,EAAV;AACD,CAFD;;AAIA;AACAT,cAAcO,SAAd,CAAwBK,eAAxB,GAA0C,YAAY;AACpD,MAAMC,OAAO,IAAb;;AAEA,MAAMC,UAAU;AACdC,wBAAkB,KAAKC,MAAL,CAAYC,SAA9B,kCADc;AAEdC,YAAQ,MAFM;AAGdC,UAAM;AACJC,kBAAY,KAAKA,UADb;AAEJC,mBAAa,KAAKA;AAFd;AAHQ,GAAhB;;AASAR,OAAKS,QAAL,CAAcR,OAAd,EAAuB,UAACS,MAAD,EAAY;;AAEjC,QAAIA,OAAOC,MAAP,KAAkB,CAAtB,EAAyB;AACvB;AACAX,WAAKY,SAAL,IAAkB,CAAlB;AACD,KAHD,MAGO,IAAIF,OAAOC,MAAP,KAAkB,CAAC,CAAnB,IACTD,OAAOG,WAAP,KAAuB,EADlB,EACsB;AAC3B;AACAb,WAAKc,IAAL,CAAU;AACRC,cAAM/B,mBAASgC,eAAT,CAAyBC,6BADvB;AAERC,iBAASlB,KAAKmB;AAFN,OAAV;AAID;;AAED,QAAMC,UAAW,IAAIC,IAAJ,EAAD,CAAaC,OAAb,KAAyBtB,KAAKuB,SAA9C;AACA,QAAIvB,KAAKY,SAAL,IAAkB,CAAlB,IAAuBQ,UAAUrC,WAArC,EAAkD;AAChD,UAAIiB,KAAKY,SAAL,IAAkB,CAAtB,EAAyB;AACvB,YAAMY,SAAU,IAAIH,IAAJ,EAAD,CAAaC,OAAb,EAAf;AACAtB,aAAKyB,IAAL,CAAUC,gBAAV,GAA6BF,SAASxB,KAAKuB,SAA3C;AACAvB,aAAKyB,IAAL,CAAUE,gBAAV,GAA6B,CAA7B;AACA3B,aAAKL,EAAL,CAAQe,OAAOd,KAAf;AACD,OALD,MAKO;AACLI,aAAKc,IAAL,CAAU;AACRC,gBAAM/B,mBAASgC,eAAT,CAAyBY,uBADvB;AAERV,mBAASlB,KAAKmB;AAFN,SAAV;AAID;AACF,KAZD,MAYO;AACLU,iBAAW7B,KAAKD,eAAhB,EAAiCb,aAAjC;AACD;AACF,GA9BD;AA+BD,CA3CD;;AA6CAC,cAAcO,SAAd,CAAwBoC,OAAxB,GAAkC,UAAUC,GAAV,EAAeC,EAAf,EAAmB;AACnD,OAAKzB,UAAL,GAAkBwB,IAAIxB,UAAtB;AACA,OAAKC,WAAL,GAAmBuB,IAAIvB,WAAvB;AACA,OAAKwB,EAAL,GAAUA,EAAV;;AAEA,OAAKC,cAAL,GAAsB,cAAY,KAAK1B,UAAjB,SAA+B,KAAKC,WAApC,GAClB,oCADJ;AAEA,OAAKW,cAAL,GAAsB,cAAY,KAAKZ,UAAjB,SAA+B,KAAKC,WAApC,GAClB,uCADJ;;AAGA,OAAKe,SAAL,GAAkB,IAAIF,IAAJ,EAAD,CAAaC,OAAb,EAAjB;;AAEA;AACA,OAAKV,SAAL,GAAiB,CAAjB;AACA,OAAKb,eAAL;;AAEA,SAAO,IAAP;AACD,CAjBD;;AAmBAmC,OAAOC,OAAP,GAAiBhD,aAAjB","file":"startActivity.js","sourcesContent":["import util from \"util\";\nimport BaseCommand from \"../../base-mobile-command\";\nimport settings from \"../../settings\";\n\nconst MAX_TIMEOUT = settings.COMMAND_MAX_TIMEOUT;\nconst WAIT_INTERVAL = settings.WAIT_INTERVAL;\n\nconst StartActivity = function (nightwatch = null) {\n  BaseCommand.call(this, nightwatch);\n  this.cmd = \"startactivity\";\n};\n\nutil.inherits(StartActivity, BaseCommand);\n\nStartActivity.prototype.do = function (value) {\n  this.pass({ actual: value });\n};\n\n/* eslint-disable no-magic-numbers */\nStartActivity.prototype.checkConditions = function () {\n  const self = this;\n\n  const options = {\n    path: `/session/${this.client.sessionId}/appium/device/start_activity`,\n    method: \"POST\",\n    data: {\n      appPackage: this.appPackage,\n      appActivity: this.appActivity\n    }\n  };\n\n  self.protocol(options, (result) => {\n\n    if (result.status === 0) {\n      // sucessful\n      self.seenCount += 1;\n    } else if (result.status === -1 &&\n      result.errorStatus === 13) {\n      // method not implement, fail immediately\n      self.fail({\n        code: settings.FAILURE_REASONS.BUILTIN_COMMAND_NOT_SUPPORTED,\n        message: self.failureMessage\n      });\n    }\n\n    const elapsed = (new Date()).getTime() - self.startTime;\n    if (self.seenCount >= 1 || elapsed > MAX_TIMEOUT) {\n      if (self.seenCount >= 1) {\n        const elapse = (new Date()).getTime();\n        self.time.executeAsyncTime = elapse - self.startTime;\n        self.time.seleniumCallTime = 0;\n        self.do(result.value);\n      } else {\n        self.fail({\n          code: settings.FAILURE_REASONS.BUILTIN_COMMAND_TIMEOUT,\n          message: self.failureMessage\n        });\n      }\n    } else {\n      setTimeout(self.checkConditions, WAIT_INTERVAL);\n    }\n  });\n};\n\nStartActivity.prototype.command = function (app, cb) {\n  this.appPackage = app.appPackage;\n  this.appActivity = app.appActivity;\n  this.cb = cb;\n\n  this.successMessage = `Activity ${this.appPackage}.${this.appActivity}`\n    + \" was started after %d milliseconds\";\n  this.failureMessage = `Activity ${this.appPackage}.${this.appActivity}`\n    + \" wasn't started after %d milliseconds\";\n\n  this.startTime = (new Date()).getTime();\n\n  // Track how many times selector is successfully checked by /element protocol\n  this.seenCount = 0;\n  this.checkConditions();\n\n  return this;\n};\n\nmodule.exports = StartActivity;\n"]}